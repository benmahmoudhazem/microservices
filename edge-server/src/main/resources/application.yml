spring:
  aop:
    proxyTargetClass: true

banner:
  charset: UTF-8 # Banner file encoding.

# Define the port where the API gateway server would be running
server:
  port: 8080

  # Define Tomcat request logger
  tomcat:
    access_log_enabled: true
    access_log_pattern: '%h %t "%r" %s %b'
    basedir: tomcat

# Actuator Management
management:
  context-path: /manage

# Define the Eureka server that handles service registration
eureka:
  instance:
      hostname: localhost
      port: 8761
      statusPageUrlPath: ${management.context-path}/info
      healthCheckUrlPath: ${management.context-path}/health
      instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/

# Define Zuul Server's routes
zuul:
  routes:
    uaa-server:
      sensitiveHeaders:
      path: /uaa/**
      stripPrefix: false
  add-proxy-headers: true


security:
  # Disable Spring Boot basic authentication
  basic:
    enabled: false
  ignored: none
  # Oauth2 Configuration
  oauth2:
    sso:
      loginPath: /login
    client:
      accessTokenUri: http://localhost:${server.port}/uaa/oauth/token
      userAuthorizationUri: /uaa/oauth/authorize
      clientId: acme
      clientSecret: acmesecret
    resource:
      jwt:
        keyValue: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnGp/Q5lh0P8nPL21oMMrt2RrkT9AW5jgYwLfSUnJVc9G6uR3cXRRDCjHqWU5WYwivcF180A6CWp/ireQFFBNowgc5XaA0kPpzEtgsA5YsNX7iSnUibB004iBTfU9hZ2Rbsc8cWqynT0RyN4TP1RYVSeVKvMQk4GT1r7JCEC+TNu1ELmbNwMQyzKjsfBXyIOCFU/E94ktvsTZUHF4Oq44DBylCDsS1k7/sfZC2G5EU7Oz0mhG8+Uz6MSEQHtoIi6mc8u64Rwi3Z3tscuWG2ShtsUFuNSAFNkY7LkLn+/hxLCu2bNISMaESa8dG22CIMuIeRLVcAmEWEWH5EEforTg+QIDAQAB
          -----END PUBLIC KEY-----
      id: openid
      serviceId: ${PREFIX:}resource

# FIXME?? : replace by        keyUri: http://localhost:9090/uaa/oauth/token

